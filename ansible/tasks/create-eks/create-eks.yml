---
- hosts: vpc
  vars_files:
    - vars/aws.yml
  environment:
    AWS_ACCESS_KEY_ID: "{{ aws_access_key }}"
    AWS_SECRET_ACCESS_KEY: "{{ aws_secret_key }}"
    AWS_REGION: "{{ aws_region }}"
  tasks:
    - name: create VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ aws_region }}"
      register: create_vpc

    - name: "set fact: VPC ID"
      set_fact:
        vpc_id: "{{ create_vpc.vpc.id }}"

    - name: create private VPC subnet 1
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ vpc_private_subnet.cidr }}"
        az: "{{ vpc_private_subnet.az }}"
        tags:
          Name: "vpc-private-a"
      register: create_private_vpc_subnet

    - name: create private VPC subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ vpc_private_subnet_2.cidr }}"
        az: "{{ vpc_private_subnet_2.az }}"
        tags:
          Name: "vpc-private-b"
      register: create_private_vpc_subnet_2
    
    - name: create public VPC subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ vpc_public_subnet.cidr }}"
        az: "{{ vpc_public_subnet.az }}"
        tags:
          Name: "vpc-public-a"
      register: create_public_vpc_subnet
    
    - name: create public VPC subnet 2
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ vpc_public_subnet_2.cidr }}"
        az: "{{ vpc_public_subnet_2.az }}"
        tags:
          Name: "vpc-public-b"
      register: create_public_vpc_subnet_2
    
    - name: create VPC security groups
      ec2_group:
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        vpc_id: "{{ vpc_id }}"
        rules: "{{ item.rules }}"
      loop: "{{ vpc_security_groups }}"
        
    - name: create Route 53 private hosted zone
      route53_zone:
        zone: "{{ vpc_dns_zone }}"
        state: present
        vpc_id: "{{ vpc_id }}"
        vpc_region: "{{ aws_region }}"

    - name: create internet gateway
      ec2_vpc_igw:
        vpc_id: "{{ vpc_id }}"
      register: create_gateway

    - name: create NAT gateway
      ec2_vpc_nat_gateway:
        subnet_id: "{{ create_public_vpc_subnet.subnet.id }}"
        region: "{{ aws_region }}"
        wait: yes
        if_exist_do_not_create: true
      register: create_nat_gateway

    - name: "set facts: Gateway IDs and IP"
      set_fact:
        vpc_gateway_id: "{{ create_gateway.gateway_id }}"
        vpc_nat_gateway_id: "{{ create_nat_gateway.nat_gateway_id }}"
        vpc_nat_gateway_ip: "{{ create_nat_gateway.nat_gateway_addresses[0].public_ip }}"
    
    - name: update DNS with NAT gateway IP
      route53:
        zone: "{{ vpc_dns_zone }}"
        private_zone: yes
        record: "nat.{{ vpc_dns_zone }}"
        type: A
        value: "{{ vpc_nat_gateway_ip }}"
        state: present
    
    - name: create route table for private subnets
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_id }}"
        tags:
          Name: "{{ vpc_name }}-private"
        subnets:
          - "{{ create_private_vpc_subnet.subnet.id }}"
          - "{{ create_private_vpc_subnet_2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ vpc_nat_gateway_id }}"

    - name: create route table for public subnets
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_id }}"
        tags:
          Name: "{{ vpc_name }}-public"
        subnets:
          - "{{ create_public_vpc_subnet.subnet.id }}"
          - "{{ create_public_vpc_subnet_2.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ vpc_gateway_id }}"
    
    - name: create rds subnet group
      rds_subnet_group:
        state: present
        name: atc-db-subnet
        description: RDS DB Subnet
        subnets:
          - "{{ create_private_vpc_subnet.subnet.id }}"
          - "{{ create_private_vpc_subnet_2.subnet.id }}"

    - name: create an rds database in the private subnet
      rds:
        command: create
        instance_name: atc-database
        db_engine: postgres
        size: 10
        instance_type: db.t3.small
        db_name: atc_project
        username: postgres
        password: postgres
        port: 5432
        region: "{{ aws_region }}"
        publicly_accessible: no
        subnet: atc-db-subnet
    
    - name: create an eks cluster
      shell: |
        eksctl create cluster \
        --name atc \
        --version 1.14 \
        --nodegroup-name standard-workers \
        --node-type t3.medium \
        --nodes 1 \
        --nodes-min 1 \
        --nodes-max 2 \
        --node-ami auto \
        --vpc-private-subnets "{{ create_private_vpc_subnet.subnet.id }}","{{ create_private_vpc_subnet_2.subnet.id }}" \
        --vpc-public-subnets "{{ create_public_vpc_subnet.subnet.id }}","{{ create_public_vpc_subnet_2.subnet.id }}" \

